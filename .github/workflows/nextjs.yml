# Sample workflow for building and deploying a Vite/React site to GitHub Pages
# Based on the original Next.js template, modified for Vite/npm.

name: Deploy Vite site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Detect package manager
        id: detect-package-manager
        run: |
          # The logic is simplified since your project uses npm based on package.json
          if [ -f "${{ github.workspace }}/package.json" ]; then
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "command=ci" >> $GITHUB_OUTPUT
            echo "runner=npm run" >> $GITHUB_OUTPUT # Set runner to 'npm run'
            exit 0
          else
            echo "Unable to determine package manager"
            exit 1
          fi

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: ${{ steps.detect-package-manager.outputs.manager }}

      # NOTE: The Next.js-specific 'Setup Pages' step is removed.
      # NOTE: No changes are needed for the Vite output path here; Vite defaults to /dist.

      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: |
            node_modules
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-${{ steps.detect-package-manager.outputs.manager }}-${{ hashFiles('**/package-lock.json') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-${{ steps.detect-package-manager.outputs.manager }}-

      - name: Install dependencies
        # This executes: npm ci
        run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}

      - name: Build with Vite
        # This executes: npm run build, which runs "vite build"
        run: ${{ steps.detect-package-manager.outputs.runner }} build

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Vite's default output directory is 'dist'
          path: ./dist 

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
